{"ast":null,"code":"import _classCallCheck from \"/Users/minhkhuonglu/Downloads/deployment/deployment/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/minhkhuonglu/Downloads/deployment/deployment/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Store } from '@ngrx/store';\nimport { TrainingService } from '../training/training.service';\nimport { UIService } from '../shared/ui.service';\nimport * as UI from '../shared/ui.actions';\nimport * as Auth from './auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../training/training.service\";\nimport * as i3 from \"../shared/ui.service\";\nimport * as i4 from \"@ngrx/store\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(router, afAuth, trainingService, uiService, store) {\n      _classCallCheck(this, AuthService);\n\n      this.router = router;\n      this.afAuth = afAuth;\n      this.trainingService = trainingService;\n      this.uiService = uiService;\n      this.store = store;\n    }\n\n    _createClass(AuthService, [{\n      key: \"initAuthListener\",\n      value: function initAuthListener() {\n        var _this = this;\n\n        this.afAuth.authState.subscribe(function (user) {\n          if (user) {\n            _this.store.dispatch(new Auth.SetAuthenticated());\n\n            _this.router.navigate(['/training']);\n          } else {\n            _this.trainingService.cancelSubscriptions();\n\n            _this.store.dispatch(new Auth.SetUnauthenticated());\n\n            _this.router.navigate(['/login']);\n          }\n        });\n      }\n    }, {\n      key: \"registerUser\",\n      value: function registerUser(authData) {\n        var _this2 = this;\n\n        // this.uiService.loadingStateChanged.next(true);\n        this.store.dispatch(new UI.StartLoading());\n        this.afAuth.auth.createUserWithEmailAndPassword(authData.email, authData.password).then(function (result) {\n          // this.uiService.loadingStateChanged.next(false);\n          _this2.store.dispatch(new UI.StopLoading());\n        }).catch(function (error) {\n          // this.uiService.loadingStateChanged.next(false);\n          _this2.store.dispatch(new UI.StopLoading());\n\n          _this2.uiService.showSnackbar(error.message, null, 3000);\n        });\n      }\n    }, {\n      key: \"login\",\n      value: function login(authData) {\n        var _this3 = this;\n\n        // this.uiService.loadingStateChanged.next(true);\n        this.store.dispatch(new UI.StartLoading());\n        this.afAuth.auth.signInWithEmailAndPassword(authData.email, authData.password).then(function (result) {\n          // this.uiService.loadingStateChanged.next(false);\n          _this3.store.dispatch(new UI.StopLoading());\n        }).catch(function (error) {\n          // this.uiService.loadingStateChanged.next(false);\n          _this3.store.dispatch(new UI.StopLoading());\n\n          _this3.uiService.showSnackbar(error.message, null, 3000);\n        });\n      }\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        this.afAuth.auth.signOut();\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}