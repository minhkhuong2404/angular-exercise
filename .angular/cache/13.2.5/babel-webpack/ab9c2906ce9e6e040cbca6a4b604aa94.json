{"ast":null,"code":"import { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TrainingService } from '../training/training.service';\nimport { UIService } from '../shared/ui.service';\nimport * as UI from '../shared/ui.actions';\nimport * as Auth from './auth.actions';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nimport * as i3 from \"../training/training.service\";\nimport * as i4 from \"../shared/ui.service\";\nimport * as i5 from \"@ngrx/store\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, afAuth, trainingService, uiService, store) {\n      this.router = router;\n      this.afAuth = afAuth;\n      this.trainingService = trainingService;\n      this.uiService = uiService;\n      this.store = store;\n    }\n\n    initAuthListener() {\n      this.afAuth.authState.subscribe(user => {\n        if (user) {\n          this.store.dispatch(new Auth.SetAuthenticated());\n          this.router.navigate(['/training']);\n        } else {\n          this.trainingService.cancelSubscriptions();\n          this.store.dispatch(new Auth.SetUnauthenticated());\n          this.router.navigate(['/login']);\n        }\n      });\n    }\n\n    registerUser(authData) {\n      // this.uiService.loadingStateChanged.next(true);\n      this.store.dispatch(new UI.StartLoading());\n      this.afAuth.createUserWithEmailAndPassword(authData.email, authData.password).then(result => {\n        // this.uiService.loadingStateChanged.next(false);\n        this.store.dispatch(new UI.StopLoading());\n      }).catch(error => {\n        // this.uiService.loadingStateChanged.next(false);\n        this.store.dispatch(new UI.StopLoading());\n        this.uiService.showSnackbar(error.message, null, 3000);\n      });\n    }\n\n    login(authData) {\n      // this.uiService.loadingStateChanged.next(true);\n      this.store.dispatch(new UI.StartLoading());\n      this.afAuth.signInWithEmailAndPassword(authData.email, authData.password).then(result => {\n        // this.uiService.loadingStateChanged.next(false);\n        this.store.dispatch(new UI.StopLoading());\n      }).catch(error => {\n        // this.uiService.loadingStateChanged.next(false);\n        this.store.dispatch(new UI.StopLoading());\n        this.uiService.showSnackbar(error.message, null, 3000);\n      });\n    }\n\n    logout() {\n      this.afAuth.signOut();\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.TrainingService), i0.ɵɵinject(i4.UIService), i0.ɵɵinject(i5.Store));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}